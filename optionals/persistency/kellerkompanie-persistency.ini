[Default]

Version = 1
;; Used incase there is ever a breaking change, or to inform user in log about a new feature.

Strip Chars = ";[]"
;; List of characters to strip out
Strip Chars Mode = 0
;; 0 = Strip Bad Chars, 1 = Strip + Log Bad Chars, 2 = Return Error & Log Bad Chars
;;     Note: Logging on works when sending data to database.

Input SQF Parser = false
;; Expermential
;;   If enabled will use SQF Array Parser instead of : seperator for values
;;   i.e   0:SQL:UpdatePlayer:["Joe",[1,2,0],0.22333,"PlayerBackpack",-3]
;;   Advantage is that you don't need to strip : seperator from user inputted values


[createTableLoadout]
SQL1_1  = CREATE TABLE IF NOT EXISTS loadout (
SQL1_2  = LoadoutID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
SQL1_3  = LoadoutKey CHAR(32) NOT NULL,
SQL1_4  = PlayerUID CHAR(100) NOT NULL,
SQL1_5  = PlayerName CHAR(255) NOT NULL,
SQL1_6  = Time DATETIME NOT NULL,
SQL1_7  = Loadout TEXT NOT NULL,
SQL1_8  = MedicClass TINYINT NOT NULL,
SQL1_9  = EngineerClass TINYINT NOT NULL,
SQL1_10  = Rank ENUM('PRIVATE','CORPORAL','SERGEANT','LIEUTENANT','CAPTAIN','MAJOR','COLONEL') NOT NULL,
SQL1_11 = Position TEXT NOT NULL,
SQL1_12 = UNIQUE (LoadoutKey, PlayerUID))
SQL1_13 = CHARACTER SET 'utf8'
SQL1_14 = COLLATE 'utf8_german2_ci';

Prepared Statement = false



[setPlayerLoadout]
SQL1_1 = REPLACE INTO loadout (LoadoutKey, PlayerUID, PlayerName, Time, Loadout, MedicClass, EngineerClass, Rank, Position) VALUES
SQL1_2 = (?, ?, ?, NOW(), ?, ?, ?, ?, ?);

SQL1_INPUTS = 1,2,3,4,5,6,7,8

Prepared Statement = true



[getPlayerLoadout]
SQL1_1 = SELECT Loadout, MedicClass, EngineerClass, Rank, Position FROM loadout WHERE LoadoutKey = ? AND PlayerUID = ?;

SQL1_INPUTS = 1,2

OUTPUT = 1,2,3,4-String,5

Prepared Statement = true




[createTableCrate]
SQL1_1  = CREATE TABLE IF NOT EXISTS crate (
SQL1_2  = CrateID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
SQL1_3  = PersistencyKey CHAR(32) NOT NULL,
SQL1_4  = CrateVariable CHAR(64) NOT NULL,
SQL1_5  = Time DATETIME NOT NULL,
SQL1_6  = Class TEXT NOT NULL,
SQL1_7  = Position TEXT NOT NULL,
SQL1_8  = Orientation TEXT NOT NULL,
SQL1_9  = Items TEXT NOT NULL,
SQL1_10 = Magazines TEXT NOT NULL,
SQL1_11 = Weapons TEXT NOT NULL,
SQL1_12 = Containers TEXT NOT NULL,
SQL1_13 = UNIQUE (PersistencyKey, CrateVariable))
SQL1_14 = CHARACTER SET 'utf8'
SQL1_15 = COLLATE 'utf8_german2_ci';

Prepared Statement = false



[saveCrate]
SQL1_1 = REPLACE INTO crate (PersistencyKey, CrateVariable, Time, Class, Position, Orientation, Items, Magazines, Weapons, Containers) VALUES
SQL1_2 = (?, ?, NOW(), ?, ?, ?, ?, ?, ?, ?);

SQL1_INPUTS = 1,2,3,4,5,6,7,8,9

Prepared Statement = true


[removeCrate]
SQL1_1 = DELETE FROM crate WHERE PersistencyKey = ? AND CrateVariable = ?;

SQL1_INPUTS = 1,2

Prepared Statement = true



[getCrate]
SQL1_1 = SELECT Class, Position, Orientation, Items, Magazines, Weapons, Containers FROM crate WHERE PersistencyKey = ? AND CrateVariable = ?;

SQL1_INPUTS = 1,2

OUTPUT = 1-STRING,2,3,4,5,6,7

Prepared Statement = true


[getAllCrates]
SQL1_1 = SELECT CrateVariable FROM crate WHERE PersistencyKey = ?;

SQL1_INPUTS = 1

OUTPUT = 1-String

Prepared Statement = true


[containsCrate]
SQL1_1 = SELECT CrateVariable FROM crate WHERE PersistencyKey = ? AND CrateVariable = ?;

SQL1_INPUTS = 1,2

OUTPUT = 1-String

Prepared Statement = true




















[createTableVehicle]
SQL1_1  = CREATE TABLE IF NOT EXISTS vehicle (
SQL1_2  = VehicleID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
SQL1_3  = PersistencyKey CHAR(32) NOT NULL,
SQL1_4  = VehicleVariable CHAR(64) NOT NULL,
SQL1_5  = Time DATETIME NOT NULL,
SQL1_6  = Class TEXT NOT NULL,
SQL1_7  = Position TEXT NOT NULL,
SQL1_8  = Orientation TEXT NOT NULL,
SQL1_9  = Items TEXT NOT NULL,
SQL1_10 = Magazines TEXT NOT NULL,
SQL1_11 = Weapons TEXT NOT NULL,
SQL1_12 = Containers TEXT NOT NULL,
SQL1_13 = Fuel TEXT NOT NULL,
SQL1_14 = Damage TEXT NOT NULL,
SQL1_15 = UNIQUE (PersistencyKey, VehicleVariable))
SQL1_16 = CHARACTER SET 'utf8'
SQL1_17 = COLLATE 'utf8_german2_ci';

Prepared Statement = false



[saveVehicle]
SQL1_1 = REPLACE INTO vehicle (PersistencyKey, VehicleVariable, Time, Class, Position, Orientation, Items, Magazines, Weapons, Containers, Fuel, Damage) VALUES
SQL1_2 = (?, ?, NOW(), ?, ?, ?, ?, ?, ?, ?, ?, ?);

SQL1_INPUTS = 1,2,3,4,5,6,7,8,9,10,11

Prepared Statement = true


[removeVehicle]
SQL1_1 = DELETE FROM vehicle WHERE PersistencyKey = ? AND VehicleVariable = ?;

SQL1_INPUTS = 1,2

Prepared Statement = true



[getVehicle]
SQL1_1 = SELECT Class, Position, Orientation, Items, Magazines, Weapons, Containers, Fuel, Damage FROM vehicle WHERE PersistencyKey = ? AND VehicleVariable = ?;

SQL1_INPUTS = 1,2

OUTPUT = 1-STRING,2,3,4,5,6,7,8,9

Prepared Statement = true


[getAllVehicles]
SQL1_1 = SELECT VehicleVariable FROM vehicle WHERE PersistencyKey = ?;

SQL1_INPUTS = 1

OUTPUT = 1-String

Prepared Statement = true


[containsVehicle]
SQL1_1 = SELECT VehicleVariable FROM vehicle WHERE PersistencyKey = ? AND VehicleVariable = ?;

SQL1_INPUTS = 1,2

OUTPUT = 1-String

Prepared Statement = true














[createTableMoney]
SQL1_1  = CREATE TABLE IF NOT EXISTS money (
SQL1_2  = MoneyID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
SQL1_3  = PersistencyKey CHAR(32) NOT NULL,
SQL1_4  = PlayerUID CHAR(100) NOT NULL,
SQL1_5  = PlayerName CHAR(255) NOT NULL,
SQL1_6  = Time DATETIME NOT NULL,
SQL1_7  = Money TEXT NOT NULL,
SQL1_8  = Bank TEXT NOT NULL,
SQL1_9  = UNIQUE (PersistencyKey, PlayerUID))
SQL1_10 = CHARACTER SET 'utf8'
SQL1_11 = COLLATE 'utf8_german2_ci';

Prepared Statement = false



[getMoney]
SQL1_1 = SELECT Money, Bank FROM money WHERE PersistencyKey = ? AND PlayerUID = ?;

SQL1_INPUTS = 1,2

OUTPUT = 1,2

Prepared Statement = true


[setMoney]
SQL1_1 = REPLACE INTO money (PersistencyKey, PlayerUID, PlayerName, Time, Money, Bank) VALUES
SQL1_2 = (?, ?, ?, NOW(), ?, ?);

SQL1_INPUTS = 1,2,3,4,5

Prepared Statement = true
