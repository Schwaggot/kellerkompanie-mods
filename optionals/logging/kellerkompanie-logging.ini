[Default]

Version = 1
;; Used incase there is ever a breaking change, or to inform user in log about a new feature.

Strip Chars = ";[]"
;; List of characters to strip out
Strip Chars Mode = 0
;; 0 = Strip Bad Chars, 1 = Strip + Log Bad Chars, 2 = Return Error & Log Bad Chars
;;     Note: Logging on works when sending data to database.

Input SQF Parser = false
;; Expermential
;;   If enabled will use SQF Array Parser instead of : seperator for values
;;   i.e   0:SQL:UpdatePlayer:["Joe",[1,2,0],0.22333,"PlayerBackpack",-3]
;;   Advantage is that you don't need to strip : seperator from user inputted values




[createTableSession]
SQL1_1  = CREATE TABLE IF NOT EXISTS session (
SQL1_2  = EventID INT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
SQL1_3  = EventType ENUM('CONNECTED','DISCONNECTED'),
SQL1_4  = PlayerUID CHAR(100) NOT NULL, 
SQL1_5  = PlayerName CHAR(255) NOT NULL,
SQL1_6  = JIP BOOLEAN NOT NULL,	 
SQL1_7  = Time DATETIME NOT NULL) 
SQL1_8  = ENGINE = MYISAM 
SQL1_9  = CHARACTER SET 'utf8'
SQL1_10 = COLLATE 'utf8_german2_ci';

Prepared Statement = false



[onPlayerConnected]
SQL1_1 		= INSERT INTO session (EventType, PlayerUID, PlayerName, JIP, Time) VALUES ('CONNECTED',  ?, ?, ?, NOW());
SQL1_INPUTS = 1,2,3-bool

Prepared Statement = true



[onPlayerDisconnected]
SQL1_1 		= INSERT INTO session (EventType, PlayerUID, PlayerName, JIP, Time) VALUES ('DISCONNECTED', ?, ?, ?, NOW());
SQL1_INPUTS = 1,2,3-bool

Prepared Statement = true



[createTableMission]
SQL1_1  = CREATE TABLE IF NOT EXISTS mission (
SQL1_2  = EventID INT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
SQL1_3  = EventType ENUM('LOAD','START','END'),
SQL1_4  = Time DATETIME NOT NULL,
SQL1_5  = MissionName CHAR(255) NOT NULL,
SQL1_6  = MissionVersion INT NOT NULL,
SQL1_7  = WorldName CHAR(255) NOT NULL) 
SQL1_8  = ENGINE = MYISAM 
SQL1_9  = CHARACTER SET 'utf8'
SQL1_10 = COLLATE 'utf8_german2_ci';

Prepared Statement = false



[onMissionLoad]
SQL1_1 = INSERT INTO mission (EventType, Time, MissionName, MissionVersion, WorldName) VALUES 
SQL1_2 = ('LOAD', NOW(), ?, ?, ?);
SQL1_INPUTS = 1,2,3

Prepared Statement = true


[onMissionStart]
SQL1_1 = INSERT INTO mission (EventType, Time, MissionName, MissionVersion, WorldName) VALUES 
SQL1_2 = ('START', NOW(), ?, ?, ?);
SQL1_INPUTS = 1,2,3

Prepared Statement = true



[onMissionEnd]
SQL1_1 = INSERT INTO mission (EventType, Time, MissionName, MissionVersion, WorldName) VALUES 
SQL1_2 = ('END', NOW(), ?, ?, ?);
SQL1_INPUTS = 1,2,3

Prepared Statement = true